
#
# Copyright 2021 The Modelbox Project Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


cmake_minimum_required(VERSION 3.10)

project(modelbox-downloadpackage)

# 替换的环境变量
set(THIRDPARTY_DOWNLOAD_DIR @THIRDPARTY_DOWNLOAD_DIR@)
set(WITH_ALL_DEMO @WITH_ALL_DEMO@)

# 预先下载代码库列表，此处仅包含需要使用ADD_SUBDIRECTORY添加的外部项目。
include(ExternalProject)
find_package(Git)

if (NOT @USE_CN_MIRROR@) 
  set(GOOGLETEST_DOWNLOAD_URL "https://github.com/google/googletest/archive/refs/tags/release-1.11.0.zip")
  set(HUAWEI_SECURE_C_DOWNLOAD_URL "https://gitee.com/openeuler/libboundscheck/repository/archive/master.zip")
  set(TINYLOG_DOWNLOAD_URL "https://github.com/pymumu/tinylog/archive/refs/tags/v1.6.zip")
  set(PYBIND11_DOWNLOAD_URL "https://github.com/pybind/pybind11/archive/refs/tags/v2.9.1.zip")
  set(TOML11_DOWNLOAD_URL "https://github.com/ToruNiina/toml11/archive/refs/tags/v3.7.1.zip")
  set(NLOHMANN_DOWNLOAD_URL "https://github.com/nlohmann/json/releases/download/v3.7.3/include.zip")
  set(CPP_HTTPLIB_DOWNLOAD_URL "https://github.com/yhirose/cpp-httplib/archive/refs/tags/v0.10.4.zip")
  set(APIGW_CPP_SDK_DOWNLOAD_URL "https://github.com/modelbox-ai/modelbox-binary/releases/download/BinaryArchive/APIGW-cpp-sdk.zip")
  set(MODELBOX_WEBUI_DOWNLOAD_URL "https://github.com/modelbox-ai/modelbox-webui/archive/refs/tags/0.0.3.zip")
  set(EMOTION_DEMO_FILES_DOWNLOAD_URL "https://github.com/modelbox-ai/modelbox-binary/releases/download/BinaryArchive/emotion_demo_files.zip")
else()
  set(GOOGLETEST_DOWNLOAD_URL "https://gitcode.net/mirrors/google/googletest/-/archive/release-1.11.0/googletest-release-1.11.0.zip")
  set(HUAWEI_SECURE_C_DOWNLOAD_URL "https://gitee.com/openeuler/libboundscheck/repository/archive/master.zip")
  set(TINYLOG_DOWNLOAD_URL "https://download.fastgit.org/pymumu/tinylog/archive/refs/tags/v1.6.zip")
  set(PYBIND11_DOWNLOAD_URL "https://gitcode.net/mirrors/pybind/pybind11/-/archive/v2.9.1/pybind11-v2.9.1.zip")
  set(TOML11_DOWNLOAD_URL "https://download.fastgit.org/ToruNiina/toml11/archive/refs/tags/v3.7.1.zip")
  set(NLOHMANN_DOWNLOAD_URL "https://gitcode.net/mirrors/nlohmann/json/-/archive/v3.7.3/json-v3.7.3.zip")
  set(CPP_HTTPLIB_DOWNLOAD_URL "https://gitcode.net/mirrors/yhirose/cpp-httplib/-/archive/v0.10.4/cpp-httplib-v0.10.4.zip")
  set(APIGW_CPP_SDK_DOWNLOAD_URL "https://obs.cn-north-1.myhuaweicloud.com/apig-sdk/APIGW-cpp-sdk.zip")
  set(MODELBOX_WEBUI_DOWNLOAD_URL "https://gitee.com/modelbox/modelbox-webui/repository/archive/main.zip")
  set(EMOTION_DEMO_FILES_DOWNLOAD_URL "https://gitee.com/modelbox/modelbox-binary/attach_files/1010735/download/emotion_demo_files.zip")
endif()

# 下载googletest
ExternalProject_Add(
  GoogleTest
  URL               ${GOOGLETEST_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/googletest
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# 下载安全C库
ExternalProject_Add(
  Huawei_Secure_C_download
  URL               ${HUAWEI_SECURE_C_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/Huawei_Secure_C
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# 下载安全tinylog
ExternalProject_Add(
  tinylog
  URL               ${TINYLOG_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/tinylog
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# pybind11
ExternalProject_Add(
  pybind11
  URL               ${PYBIND11_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/pybind11
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# toml11
ExternalProject_Add(
  toml11
  URL               ${TOML11_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/toml11
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# nlohmann json
ExternalProject_Add(
  nlohmann
  URL               ${NLOHMANN_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/nlohmann
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# cpp-httplib
ExternalProject_Add(
  cpp-httplib
  URL               ${CPP_HTTPLIB_DOWNLOAD_URL}
  SOURCE_DIR        ${THIRDPARTY_DOWNLOAD_DIR}/cpp-httplib
  CONFIGURE_COMMAND ${THIRDPARTY_DOWNLOAD_DIR}/cpp-httplib/split.py -o ${THIRDPARTY_DOWNLOAD_DIR}/cpp-httplib/build
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# APIGW-cpp-sdk
ExternalProject_Add(
  APIGW-cpp-sdk
  URL                ${APIGW_CPP_SDK_DOWNLOAD_URL}
  SOURCE_DIR         ${THIRDPARTY_DOWNLOAD_DIR}/APIGW-cpp-sdk-1.0.2
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# webui
ExternalProject_Add(
  modelbox-webui
  URL                ${MODELBOX_WEBUI_DOWNLOAD_URL}
  SOURCE_DIR         ${THIRDPARTY_DOWNLOAD_DIR}/modelbox-webui
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

# demo files
if (${WITH_ALL_DEMO})
  ExternalProject_Add(
    emotion_demo_files
    URL                ${EMOTION_DEMO_FILES_DOWNLOAD_URL}
    SOURCE_DIR         ${THIRDPARTY_DOWNLOAD_DIR}/demo/emotion_demo_files
    CONFIGURE_COMMAND ""
    BUILD_COMMAND     ""
    INSTALL_COMMAND   ""
    TEST_COMMAND      ""
  )
endif()
